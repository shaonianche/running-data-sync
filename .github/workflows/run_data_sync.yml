name: Strava Sync

on:
  workflow_dispatch:
  schedule:
    - cron: '0 */3 * * *'
  push:
    branches:
      - main
    paths:
      - scripts/strava_sync.py
      - scripts/gen_svg.py
      - scripts/gpx_sync.py
      - requirements.txt

env:
  RUN_TYPE: strava
  ATHLETE: DuanFei
  TITLE: Running Data
  MIN_GRID_DISTANCE: 10 # change min distance here
  TITLE_GRID: Over 5km Runs
  GITHUB_NAME: shaonianche
  GITHUB_EMAIL: github@duanfei.org

jobs:
  sync:
    name: Sync
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      # from pdm and install dep
      - name: Set Variables
        id: set_variables
        run: |
          sudo apt-get install libxml2-dev libxslt-dev python3-dev
          echo "PY=$(python -c 'import hashlib, sys;print(hashlib.sha256(sys.version.encode()+sys.executable.encode()).hexdigest())')" >> $GITHUB_OUTPUT
          echo 'PIP_CACHE=$(pip cache dir)'' >> $GITHUB_OUTPUT
      - name: Cache PIP
        uses: actions/cache@v2
        with:
          path: ${{ steps.set_variables.outputs.PIP_CACHE }}
          key: Ubuntu-pip-${{ steps.set_variables.outputs.PY }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
        if: steps.pip-cache.outputs.cache-hit != 'true'

      - name: Run sync Strava script
        if: env.RUN_TYPE == 'strava'
        run: |
          python scripts/strava_sync.py ${{ secrets.S_CLIENT_ID }} ${{ secrets.S_CLIENT_SECRET }} ${{ secrets.S_REFRESH_TOKEN }}

      - name: Run sync Only GPX script
        if: env.RUN_TYPE == 'only_gpx'
        run: |
          python scripts/gpx_sync.py

      - name: Make svg GitHub profile
        if: env.RUN_TYPE != 'pass'
        run: |
          python scripts/gen_svg.py --from-db --title '${{ env.TITLE }}' --type github --athlete '${{ env.ATHLETE }}' --special-distance 10 --special-distance2 20 --special-color yellow --special-color2 red --output assets/github.svg --use-localtime --min-distance 0.5
          python scripts/gen_svg.py --from-db --title '${{ env.TITLE_GRID }}' --type grid --athlete '${{ env.ATHLETE }}'  --output assets/grid.svg --min-distance '${{ env.MIN_GRID_DISTANCE }}'  --special-color yellow --special-color2 red --special-distance 20 --special-distance2 40 --use-localtime
          python scripts/gen_svg.py --from-db --type circular --use-localtime
          python scripts/gen_svg.py --from-db --year $(date +"%Y")  --language zh_CN --title '$(date +'%Y') Running' --type github --athlete '${{ env.ATHLETE }}' --special-distance 10 --special-distance2 20 --special-color yellow --special-color2 red --output assets/github_$(date +"%Y").svg --use-localtime --min-distance 0.5

      - name: Push new runs
        run: |
          git config --local user.email '${{ env.GITHUB_EMAIL }}'
          git config --local user.name '${{ env.GITHUB_NAME }}'
          git commit -a -m 'update new runs' || echo 'nothing to commit'
          git push || echo 'nothing to push'

      - name: Gitee Sync
        uses: Yikun/hub-mirror-action@master
        with:
          src: github/shaonianche
          dst: gitee/shaonianche
          dst_key: ${{ secrets.GITEE_PRIVATE_KEY }}
          dst_token: ${{ secrets.GITEE_TOKEN }}
          force_update: true
          static_list: running-data-sync
