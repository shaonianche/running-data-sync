name: Run Data Sync

on:
  workflow_dispatch:
  schedule:
    - cron: '0 */3 * * *'
  # pull_request:
  #   branches:
  #     - master
  push:
    branches:
      - master
    paths:
      - scripts/nike_sync.py
      - scripts/nike_to_strava_sync.py
      - scripts/strava_sync.py
      - scripts/gen_svg.py
      - scripts/garmin_sync.py
      - scripts/keep_sync.py
      - scripts/gpx_sync.py
      - requirements.txt

env:
  RUN_TYPE: strava
  ATHLETE: DuanFei
  TITLE: Running Data
  TITLE_GRID: Over 5km Runs
  GITHUB_NAME: shaonianche
  GITHUB_EMAIL: duanfei.job@gmail.com

jobs:
  sync:
    name: Sync
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.6, 3.7, 3.8]

    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2.2.2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Configure pip cache
        uses: actions/cache@v2.1.6
        id: pip-cache
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
            ${{ runner.os }}-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
        # if: steps.pip-cache.outputs.cache-hit != 'true'

#       - name: Run sync Nike script
#         if: env.RUN_TYPE == 'nike'
#         run: |
#           python scripts/nike_sync.py ${{ secrets.N_TOKEN }}

#       - name: Run sync Nike to Strava (Run with nike data backup and show with strava)
#         if: env.RUN_TYPE == 'nike_to_strava' && ${{ matrix.python-version == '3.6'}}
#         run: |
#           python scripts/nike_to_strava_sync.py ${{ secrets.N_TOKEN }} ${{ secrets.S_CLIENT_ID }} ${{ secrets.S_CLIENT_SECRET }} ${{ secrets.S_REFRESH_TOKEN }}

#       - name: Run sync Keep script
#         if: env.RUN_TYPE == 'keep'
#         run: |
#           python scripts/keep_sync.py ${{ secrets.KEEP_MOBILE }} ${{ secrets.KEEP_PASSWORD }} --with-gpx

      - name: Run sync Strava script
        if: env.RUN_TYPE == 'strava'&& ${{ matrix.python-version == '3.6'}}
        run: |
          python scripts/strava_sync.py ${{ secrets.S_CLIENT_ID }} ${{ secrets.S_CLIENT_SECRET }} ${{ secrets.S_REFRESH_TOKEN }}

      - name: Run sync Garmin script
        if: env.RUN_TYPE == 'garmin'
        run: |
          python scripts/garmin_sync.py ${{ secrets.GRAMIN_EMAIL }} ${{ secrets.GARMIN_PASSWORD }}

      - name: Run sync Garmin CN script
        if: env.RUN_TYPE == 'garmin_cn'
        run: |
          python scripts/garmin_sync.py ${{ secrets.GRAMIN_CN_EMAIL }} ${{ secrets.GARMIN_CN_PASSWORD }} --is-cn

      - name: Run sync Only GPX script
        if: env.RUN_TYPE == 'only_gpx'
        run: |
          python scripts/gpx_sync.py

      - name: Make svg GitHub profile
        if: env.RUN_TYPE != 'pass'
        run: |
          python scripts/gen_svg.py --from-db --title "${{ env.TITLE }}" --type github --athlete "${{ env.ATHLETE }}" --special-distance 10 --special-distance2 20 --special-color yellow --special-color2 red --output assets/github.svg --use-localtime --min-distance 0.5

          python scripts/gen_svg.py --from-db --title "${{ env.TITLE_GRID }}" --type grid --athlete "${{ env.ATHLETE }}"  --output assets/grid.svg --min-distance 5 --special-color yellow --special-color2 red --special-distance 10 --special-distance2 20 --use-localtime

          python scripts/gen_svg.py --from-db --type circular --use-localtime

      - name: Push new runs
        if: ${{ matrix.python-version == '3.6'}}
        uses: github-actions-x/commit@v2.8
        with:
          github-token: ${{ secrets.G_TOKEN }}
          commit-message: 'chore(nike): add new runs'
          files: activities src/static/ scripts/ assets/ GPX_OUT/
          rebase: 'true'
          name: ${{ env.GITHUB_NAME }}
          email: ${{ env.GITHUB_EMAIL }}

      - name: Gitee Sync
        if: ${{ matrix.python-version == '3.6'}}
        uses: Yikun/hub-mirror-action@master
        with:
          src: github/shaonianche
          dst: gitee/shaonianche
          dst_key: ${{ secrets.GITEE_PRIVATE_KEY }}
          dst_token: ${{ secrets.GITEE_TOKEN }}
          force_update: true
          static_list: 'running-data-sync'
