name: Strava Sync

on:
  workflow_dispatch:
  schedule:
    - cron: '0 */3 * * *'
  push:
    branches:
      - main
    paths:
      - scripts/strava_sync.py
      - scripts/gen_svg.py
      - scripts/gpx_sync.py
      - scripts/garmin_sync.py
      - scripts/fit_to_garmin_sync.py
      - scripts/strava_to_garmin_sync.py
      - scripts/save_to_parquet.py
      - requirements.txt

env:
  RUN_TYPE: strava
  ATHLETE: FRIENDSA
  TITLE: Running
  MIN_GRID_DISTANCE: 5
  TITLE_GRID: Over 5km Runs
  GITHUB_NAME: shaonianche
  GITHUB_EMAIL: github@duanfei.org

  BACKGROUND_COLOR_LIGHT: '#e5e5e5'
  NO_ACTIVITY_COLOR_LIGHT: '#d4d4d4'
  TEXT_COLOR_LIGHT: '#262626'
  TRACK_COLOR_LIGHT: '#525252'
  SPECIAL_COLOR_LIGHT: '#024a70'
  SPECIAL_COLOR2_LIGHT: '#ff8904'

jobs:
  sync:
    name: Sync
    runs-on: ubuntu-latest
    outputs:
      SAVE_DATA_IN_GITHUB_CACHE: ${{ steps.set_output.outputs.SAVE_DATA_IN_GITHUB_CACHE }}
      DATA_CACHE_PREFIX: ${{ steps.set_output.outputs.DATA_CACHE_PREFIX }}
      BUILD_GH_PAGES: ${{ steps.set_output.outputs.BUILD_GH_PAGES }}

    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Set outputs
        id: set_output
        env:
          SAVE_DATA_IN_GITHUB_CACHE: ${{ env.SAVE_DATA_IN_GITHUB_CACHE }}
          DATA_CACHE_PREFIX: ${{ env.DATA_CACHE_PREFIX }}
          BUILD_GH_PAGES: ${{ env.BUILD_GH_PAGES }}
        run: |
          echo "SAVE_DATA_IN_GITHUB_CACHE=$SAVE_DATA_IN_GITHUB_CACHE" >> "$GITHUB_OUTPUT"
          echo "DATA_CACHE_PREFIX=$DATA_CACHE_PREFIX" >> "$GITHUB_OUTPUT"
          echo "BUILD_GH_PAGES=$BUILD_GH_PAGES" >> "$GITHUB_OUTPUT"

      - name: Cache Data Files
        if: steps.set_output.outputs.SAVE_DATA_IN_GITHUB_CACHE == 'true'
        uses: actions/cache@v4
        with:
          path: |
            activities
            public
            GPX_OUT
            TCX_OUT
            FIT_OUT
            Workouts
            scripts/data.db
            src/static/activities.json
            imported.json
          key: ${{ steps.set_output.outputs.DATA_CACHE_PREFIX }}-${{ github.sha }}-${{ github.run_id }}
          restore-keys: |
            ${{ steps.set_output.outputs.DATA_CACHE_PREFIX }}-${{ github.sha }}-
            ${{ steps.set_output.outputs.DATA_CACHE_PREFIX }}-

      - name: Setup PDM
        uses: pdm-project/setup-pdm@v4
        with:
          python-version: 3.12
          cache: true
          cache-dependency-path: ./pdm.lock

      - name: Install dependencies
        run: |
          pdm install
          echo "${{ github.workspace }}/.venv/bin" >> $GITHUB_PATH

      - name: Run sync Strava script
        if: env.RUN_TYPE == 'strava'
        run: python scripts/strava_sync.py --client-id '${{ secrets.S_CLIENT_ID }}' --client-secret '${{ secrets.S_CLIENT_SECRET }}' --refresh-token '${{ secrets.S_REFRESH_TOKEN }}'

      # - name: Run strava_to_garmin_sync script
      #   if: env.RUN_TYPE == 'strava'
      #   continue-on-error: true
      #   run: python scripts/strava_to_garmin_sync.py --is-cn '${{ secrets.GARMIN_SECRET_CN }}' --client-id '${{ secrets.S_CLIENT_ID }}' --client-secret '${{ secrets.S_CLIENT_SECRET }}' --refresh-token '${{ secrets.S_REFRESH_TOKEN }}'

      # - name: Fit to garmin cn sync
      #   if: env.RUN_TYPE == 'strava'
      #   run: python scripts/fit_to_garmin_sync.py '${{ secrets.GARMIN_SECRET_CN }}' --is-cn

      # - name: Fit to garmin sync
      #   if: env.RUN_TYPE == 'strava'
      #   run: python scripts/fit_to_garmin_sync.py '${{ secrets.GARMIN_SECRET }}'

      - name: Run sync Only GPX script
        if: env.RUN_TYPE == 'only_gpx'
        run: python scripts/gpx_sync.py

      - name: Make svg GitHub profile
        if: env.RUN_TYPE != 'pass'
        run: |
          python scripts/gen_svg.py --from-db --title '${{ env.TITLE }}' --type github --athlete '${{ env.ATHLETE }}' --special-distance 10 --special-distance2 20 --special-color yellow --special-color2 red --use-localtime --min-distance 0.5 --output public/assets/github.svg
          python scripts/gen_svg.py --from-db --title '${{ env.TITLE_GRID }}' --type grid --athlete '${{ env.ATHLETE }}' --min-distance '${{ env.MIN_GRID_DISTANCE }}' --special-color yellow --special-color2 red --special-distance 10 --special-distance2 20 --use-localtime --output public/assets/grid.svg
          python scripts/gen_svg.py --from-db --title '${{ env.TITLE }}' --type github --athlete '${{ env.ATHLETE }}' --special-distance 10 --special-distance2 20 --background-color '${{ env.BACKGROUND_COLOR_LIGHT }}' --no-activity '${{ env.NO_ACTIVITY_COLOR_LIGHT }}' --text-color '${{ env.TEXT_COLOR_LIGHT }}' --track-color '${{ env.TRACK_COLOR_LIGHT }}' --special-color '${{ env.SPECIAL_COLOR_LIGHT }}' --special-color2 '${{ env.SPECIAL_COLOR2_LIGHT }}' --use-localtime --min-distance 0.5 --output public/assets/github-light.svg
          python scripts/gen_svg.py --from-db --title '${{ env.TITLE_GRID }}' --type grid --athlete '${{ env.ATHLETE }}' --min-distance '${{ env.MIN_GRID_DISTANCE }}' --background-color '${{ env.BACKGROUND_COLOR_LIGHT }}' --text-color '${{ env.TEXT_COLOR_LIGHT }}' --track-color '${{ env.TRACK_COLOR_LIGHT }}' --special-color '${{ env.SPECIAL_COLOR_LIGHT }}' --special-color2 '${{ env.SPECIAL_COLOR2_LIGHT }}' --special-distance 10 --special-distance2 20 --use-localtime --output public/assets/grid-light.svg

      - name: Save data to parquet
        run: python scripts/save_to_parquet.py

      - name: Push new runs
        run: |
          if git diff --quiet; then
              echo "No changes to commit"
              exit 0
          fi
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add .
          git commit -m "sync running data $(date +'%Y-%m-%d')"
          git pull --rebase --autostash origin ${{ github.ref }}
          git push

  publish_github_pages:
    if: needs.sync.result == 'success'
    name: Build and publish Github Pages
    uses: ./.github/workflows/gh-pages.yml
    with:
      save_data_in_github_cache: ${{needs.sync.outputs.SAVE_DATA_IN_GITHUB_CACHE == 'true'}}
      data_cache_prefix: ${{needs.sync.outputs.DATA_CACHE_PREFIX}}
    needs:
      - sync
